# config can be tested on https://www.ssllabs.com/ssltest/ 
# and a good nginx config generator can be found at https://ssl-config.mozilla.org/
# nginx official documentation:
#   - Alphabetical index of directives: http://nginx.org/en/docs/dirindex.html
#   - Alphabetical index of variables: http://nginx.org/en/docs/varindex.html

## proxy cache
# - levels: defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2.
#         e.g. if set to `1:2`, file names in a cache will look like `/c/29/b7f54b2df7773722d382f4809d65029c`
#         e.g. if set to `1:1:1`, file names in a cache will look like `/c/9/2/b7f54b2df7773722d382f4809d65029c`
# - keys_zone: defines name and size for all active keys and information about data are stored in a shared memory zone.
#            One megabyte zone can store about 8 thousand keys.
# - max_size: maximum cache size.
# - inactive: Cached data that are not accessed during the time specified by the inactive parameter get removed from the cache regardless of their freshness.
#           Default set to 10 minutes.
# - use_temp_path: If this parameter is omitted or set to the value on, the directory set by the proxy_temp_path directive for the given location will be used.
#                If the value is set to off, temporary files will be put directly in the cache directory.
# reference: https://nginxstore.com/blog/nginx/nginx-%EB%B0%8F-nginx-plus%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-caching/
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=grafana_cache:10m max_size=1g inactive=60m use_temp_path=off;

## upstream used in proxy_pass below
# refernce: http://nginx.org/en/docs/http/ngx_http_upstream_module.html
upstream grafana {
	# ip (or container name of grafana if using user-defined bridge network) where grafana is running;
	# this relies on a working DNS inside the Docker network and uses the hostname of the grafana container.
	server grafana:3000;
	# The connections parameter sets the maximum number of idle keepalive connections to upstream servers that are preserved in the cache of each worker process. 
	# When this number is exceeded, the least recently used connections are closed.
	keepalive 32;
}

# Creates a new variable whose value depends on values of one or more of the source variables specified in the first parameter.
# reference: http://nginx.org/en/docs/stream/ngx_stream_map_module.html#map
map $http_upgrade $connection_upgrade {
	# sets the resulting value if the source value matches none of the specified variants. 
	# When default is not specified, the default resulting value will be an empty string.
	default upgrade;
	# If $http_upgrade is empty, set $connection_upgrade to "close"
	'' close;
}

## deny other domains for grafana
server {
	# The ssl parameter allows specifying that all connections accepted on this port should work in SSL mode.
	# The http2 parameter configures the port to accept HTTP/2 connections.
	listen 43604 ssl http2;
	# IPv6 addresses are specified in square brackets.
	listen [::]:43604 ssl http2;
	# Sets names of a virtual server.
	server_name _;

	## SSL
	# Specifies a file with DH parameters for DHE ciphers.
	ssl_dhparam /dhparams4096.pem;
	# Specifies a time during which a client may reuse the session parameters.
	ssl_session_timeout 1d;
	# a cache shared between all worker processes.
	# The cache size is specified in bytes; one megabyte can store about 4000 sessions.
	ssl_session_cache shared:MozSSL:10m;
	# Disables session resumption through TLS session tickets.
	ssl_session_tickets off;
	# Enables the specified protocols.
	ssl_protocols TLSv1.2 TLSv1.3;
	# Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library.
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	# Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols.
	ssl_prefer_server_ciphers off;
	# Specifies a file with the certificate and the secret key in the PEM format for the given virtual server.
	ssl_certificate /cert.pem;
	ssl_certificate_key /key.pem;

	## logging
	access_log /var/log/nginx/grafana.access.log;
	error_log /var/log/nginx/grafana.error.log;

	return 444;
}

server {
	# The ssl parameter allows specifying that all connections accepted on this port should work in SSL mode.
	# The http2 parameter configures the port to accept HTTP/2 connections.
	listen 43604 ssl http2;
	# IPv6 addresses are specified in square brackets.
	listen [::]:43604 ssl http2;
	# Sets names of a virtual server.
	server_name service-monitor.com;

	# Forcing HTTPs redirects from HTTP on non-standard ports
	error_page 497 https://$host:$server_port$request_uri;

	## logging
	access_log /var/log/nginx/grafana.access.log;
	error_log /var/log/nginx/grafana.error.log;

	## gzip for performance
	# Enables gzipping of responses.
	gzip on;
	# Enables inserting the “Vary: Accept-Encoding” response header field if the directives gzip, gzip_static, or gunzip are active.
	gzip_vary on;
	# Enables or disables gzipping of responses for proxied requests depending on the request and response.
	# If set to "any", enables compression for all proxied requests.
	gzip_proxied any;
	# Sets a gzip compression level of a response. Acceptable values are in the range from 1 to 9.
	gzip_comp_level 6;
	# Enables gzipping of responses for the specified MIME types in addition to “text/html”.
	gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

	## SSL
	# Specifies a file with DH parameters for DHE ciphers.
	ssl_dhparam /dhparams4096.pem;
	# Specifies a time during which a client may reuse the session parameters.
	ssl_session_timeout 1d;
	# a cache shared between all worker processes.
	# The cache size is specified in bytes; one megabyte can store about 4000 sessions.
	ssl_session_cache shared:MozSSL:10m;
	# Disables session resumption through TLS session tickets.
	ssl_session_tickets off;
	# Enables the specified protocols.
	ssl_protocols TLSv1.2 TLSv1.3;
	# Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library.
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	# Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols.
	ssl_prefer_server_ciphers off;
	# Specifies a file with the certificate and the secret key in the PEM format for the given virtual server.
	ssl_certificate /cert.pem;
	ssl_certificate_key /key.pem;
	# enable TLSv1.3's 0-RTT. Use $ssl_early_data when reverse proxying to prevent replay attacks.
	# https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_early_data
	ssl_early_data on;
	# Enables stapling of OCSP responses by the server.
	# For the OCSP stapling to work, the certificate of the server certificate issuer should be known.
	ssl_stapling on;
	# Enables verification of OCSP responses by the server.
	# For verification to work, the certificate of the server certificate issuer, the root certificate, 
	# and all intermediate certificates should be configured as trusted using the ssl_trusted_certificate directive.
	ssl_stapling_verify on;
	# # verify chain of trust of OCSP response using Root CA and Intermediate certs
	# #ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

	## security headers
	# config can be scan on https://securityheaders.com/
	# references: https://scotthelme.co.uk/tag/security-headers/ and 
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Content-Type-Options "nosniff" always;
	add_header Referrer-Policy no-referrer;
	add_header Strict-Transport-Security "max-age=63072000" always;
	add_header Permissions-Policy "interest-cohort=()";

	## locations
	# ACME-challenge
	location ^~ /.well-known {
		default_type "text/plain";
		root /usr/share/nginx/html;
		allow all;
	}

	# disable Google bots from indexing this site
	location = /robots.txt {
		add_header Content-Type text/plain;
		return 200 "User-agent: *\nDisallow: /\n";
	}

	# ## Websocket
	# location ~ /api/v[0-9]+/(users/)?websocket$ {
	# 	proxy_set_header Upgrade $http_upgrade;
	# 	proxy_set_header Connection $connection_upgrade;
	# 	client_max_body_size 50M;
	# 	proxy_set_header Host $http_host;
	# 	proxy_set_header X-Real-IP $remote_addr;
	# 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	# 	proxy_set_header X-Forwarded-Proto $scheme;
	# 	proxy_set_header X-Frame-Options SAMEORIGIN;
	# 	proxy_set_header Early-Data $ssl_early_data;
	# 	proxy_buffers 256 16k;
	# 	proxy_buffer_size 16k;
	# 	client_body_timeout 60;
	# 	send_timeout 300;
	# 	lingering_timeout 5;
	# 	proxy_connect_timeout 90;
	# 	proxy_send_timeout 300;
	# 	proxy_read_timeout 90s;
	# 	proxy_http_version 1.1;
	# 	proxy_pass http://backend;
	# }

	## HTTP/HTTPS
	location / {
		# Sets the maximum allowed size of the client request body.
		# Setting size to 0 disables checking of client request body size because it already checked by application.
		client_max_body_size 0;

		# Allows redefining or appending fields to the request header passed to the proxied server.
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Frame-Options SAMEORIGIN;
		proxy_set_header Early-Data $ssl_early_data;

		# Sets the number and size of the buffers used for reading a response from the proxied server, for a single connection.
		proxy_buffers 256 16k;
		# limits the total size of buffers that can be busy sending a response to the client while the response is not yet fully read.
		proxy_buffer_size 16k;

		# Defines a timeout for reading a response from the proxied server.
		# If the proxied server does not transmit anything within this time, the connection is closed.
		proxy_read_timeout 600s;

		# Defines a shared memory zone used for caching.
		proxy_cache grafana_cache;
		# Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.
		proxy_cache_revalidate on;
		# Sets the number of requests after which the response will be cached.
		proxy_cache_min_uses 3;
		# Determines in which cases a stale cached response can be used during communication with the proxied server.
		proxy_cache_use_stale timeout updating;
		# Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client.
		proxy_cache_background_update on;
		# When enabled, only one request at a time will be allowed to populate a new cache element identified according to the proxy_cache_key directive by passing a request to a proxied server.
		proxy_cache_lock on;

		# Sets the HTTP protocol version for proxying.
		proxy_http_version 1.1;

		# Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped.
		proxy_pass http://grafana;
	}
}
